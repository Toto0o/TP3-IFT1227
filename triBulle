.data
buffer:			.space	400
taille:			.word 0
msg_input:		.asciiz	"Entrez un nombre (-1 pour terminer):  "
msg_depassement:	.asciiz "Vous avez dépassez la taille maximale permise"

.text
main:	
	la $a0, buffer
	la $a1, taille
	jal saisir
	
	la $a0, buffer
	la $a1, taille
	jal afficher
	
	li $v0,10
	syscall
	
saisir:
	#stocker les arguments dans la stack
	addi $sp, $sp, -12
	sw $ra, 0($sp)
	sw $a0, 4($sp)
	sw $a1, 8($sp)
	
boucle_saisir:
	#boucle de saisie principal

	#verifier capacite
	lw $a1, 8($sp)
	lw $a1, 0($a1)
	blt $a1, 400, input
	
	#si depassement :
	la $a0, msg_depassement
	li $v0, 4
	syscall
	j fin_saisir
	
input:
	#input de l'utilisateur, -1 pour terminer
	la $a0, msg_input
	li $v0, 4
	syscall
	li $v0, 5
	syscall
	move $t0, $v0 #placer le input de l'utilisateur dans $t0
	
	#si le nombre entré est -1, finir la saisie
	li $t2, -1
	beq $t0, $t2, fin_saisir
	
	#sinon, stocker dans buffer
	lw $a0 4($sp)	#contient pointer vers buffer
	lw $a1, 8($sp)
	lw $t2, 0($a1)	#modifier la valeur de taille
	
	#calcul de l'adresse pour placer le prochain nombre
	add $t1, $a0, $t2	
	sw $t0, 0($t1)
	
	#incremter taille +4
	addi $t2, $t2, 4
	sw $t2, 0($a1)
	j boucle_saisir

fin_saisir:
	lw $ra 0($sp)
	addi $sp, $sp, 12
	jr $ra
	
afficher:
	lw $t1, 0($a1) #taille
	
	add $t2, $t1, $a0 #adresse a imprimer
	lw $t0, 0($t2)
	li $v0, 1
	syscall
	
	addi $t1, $t1, -4
	beqz $t1, end_afficher
	j afficher

end_afficher:
	jr $ra
	
	
	
	
	

	
